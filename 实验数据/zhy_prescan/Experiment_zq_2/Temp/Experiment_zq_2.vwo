vismanager.setSimulationFrequency(20)
vismanager.initDefaultLight(True)
light_root.sun.setDirection(-1, 1, -1)
light_root.sun.setAmbient(0.5882353, 0.5882353, 0.5882353, 1)
light_root.sun.setDiffuse(0.4117647, 0.4117647, 0.4117647, 1)
light_root.sun.setSpecular(0.5882353, 0.5882353, 0.5882353, 1)
light_root.setGlobalAmbientColor(0, 0, 0, 1.0)
light_root.sun.setIntensity(1)
light_root.sun.setShadowMode(visnodes.VisLight.ShadowMode.SHADOW_ON)

light_root.setShadowsContrast(0.7, 0.3)
light_root.setMinimumWorldBBox(True, -134.5369, -134.8917, 0, 134.263, 133.9083, 0)
light_root.setShadowSoftnessWidth(0.00075);light_root.setShadowJitteringScale(32)
light_root.sun.setShadowTextureSize(4096)

skybox_visual_world = visnodes.VisBackground.createSkybox(r"skybox_visual_world", r"SKY_Air", 1)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world);mat.setColors(1.176471, 1.176471, 1.176471, 1.0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
skybox_visual_world_bottom = visnodes.VisTerrain.createTerrain(r"skybox_visual_world_bottom", 1000, 1000, r"Air_terrain.png", 20000, 20000, -50, True)
mat = visnodes.VisMaterial_createAndSetVisMaterial(skybox_visual_world_bottom);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1.0, 0.7843137, 0.7843137, 0.7843137, 1.0, 0, 0, 0, 1.0, 0, 0, 0, 1)
skybox_visual_world_container = visnodes.VisTransform.createTransformNode(r"skybox_visual_world_container")
skybox_visual_world_container.setNodeMask(8, False)
skybox_visual_world_container.addChild(skybox_visual_world)
non_shader_scene.addChild(skybox_visual_world_container)

terrain_visual_world = visnodes.VisTerrain.createTerrain(r"terrain_visual_world", 1096, 1166.635, "Air_terrain.png", 1096, 1166.635)
mat = visnodes.VisMaterial_createAndSetVisMaterial(terrain_visual_world);mat.setColors(0.7843137, 0.7843137, 0.7843137, 1, 0.7843137, 0.7843137, 0.7843137, 1, 0, 0, 0, 1, 0, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setShininess(0);mat.applyComponents(terrain_visual_world, mat.SHININESS, True)
terrain_visual_world_container = visnodes.VisTransform.createTransformNode(r"terrain_visual_world_container")
terrain_visual_world_container.setNodeMask(16, False)
terrain_visual_world_container.addChild(terrain_visual_world)
scene.addChild(terrain_visual_world_container)
terrain_visual_world_container.addChild(skybox_visual_world_bottom)
terrain_visual_world.setTranslation(0, -27.1146240234375, 0)

BMW_X5_SUV_1 = visnodes.VisTransform.load( r"BMW_X5_SUV_1", r"Vehicles\BMW_X5\BMW_X5.osgb", True )
BMW_X5_SUV_1.setNodeMask(0xFFFFFFFF, True)
BMW_X5_SUV_1.setNodeMaskOnGeodes(70016)
light_root.setupGPUSkinningClassic(BMW_X5_SUV_1, False)
scene.addChild(BMW_X5_SUV_1)
scene.BMW_X5_SUV_1.getTransformChild("SteeringWheel_pivot")
scene.BMW_X5_SUV_1.getTransformChild("SteeringColumn_pivot")
scene.BMW_X5_SUV_1.getTransformChild("WheelL0_Suspension")
scene.BMW_X5_SUV_1.getTransformChild("WheelL0_SteerPivot")
scene.BMW_X5_SUV_1.getTransformChild("WheelL0")
scene.BMW_X5_SUV_1.getTransformChild("WheelL1_Suspension")
scene.BMW_X5_SUV_1.getTransformChild("WheelL1_SteerPivot")
scene.BMW_X5_SUV_1.getTransformChild("WheelR0_Suspension")
scene.BMW_X5_SUV_1.getTransformChild("WheelR0_SteerPivot")
scene.BMW_X5_SUV_1.getTransformChild("WheelR0")
scene.BMW_X5_SUV_1.getTransformChild("WheelR1_Suspension")
scene.BMW_X5_SUV_1.getTransformChild("WheelR1_SteerPivot")
scene.BMW_X5_SUV_1.getTransformChild("WheelR1")
scene.BMW_X5_SUV_1.getTransformChild("WheelL1")
scene.BMW_X5_SUV_1.getTransformChild("BrakeLightL_pivot")
scene.BMW_X5_SUV_1.getTransformChild("BrakeLightR_pivot")
scene.BMW_X5_SUV_1.getTransformChild("FogLightFL_pivot")
scene.BMW_X5_SUV_1.getTransformChild("FogLightFR_pivot")
scene.BMW_X5_SUV_1.getTransformChild("FogLightRL_pivot")
scene.BMW_X5_SUV_1.getTransformChild("IndicatorFL_pivot")
scene.BMW_X5_SUV_1.getTransformChild("IndicatorSL_pivot")
scene.BMW_X5_SUV_1.getTransformChild("IndicatorRL_pivot")
scene.BMW_X5_SUV_1.getTransformChild("IndicatorFR_pivot")
scene.BMW_X5_SUV_1.getTransformChild("IndicatorSR_pivot")
scene.BMW_X5_SUV_1.getTransformChild("IndicatorRR_pivot")
scene.BMW_X5_SUV_1.getTransformChild("MainLightFL_HB_pivot")
scene.BMW_X5_SUV_1.getTransformChild("MainLightFR_HB_pivot")
scene.BMW_X5_SUV_1.getTransformChild("MainLightFL_LB_pivot")
scene.BMW_X5_SUV_1.getTransformChild("MainLightFR_LB_pivot")
scene.BMW_X5_SUV_1.getTransformChild("MainLightRL_pivot")
scene.BMW_X5_SUV_1.getTransformChild("MainLightRR_pivot")
scene.BMW_X5_SUV_1.getTransformChild("ReverseLightRR_pivot")
scene.BMW_X5_SUV_1.setTranslation(5.249999999999984, -54.122066020965583, 0)
scene.BMW_X5_SUV_1.setRotation(1.5707963267948966, 0, 0, 1)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.BrakeLightL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.BrakeLightR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.FogLightFL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.FogLightFR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.FogLightRL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.IndicatorFL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.IndicatorSL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.IndicatorRL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.IndicatorFR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.IndicatorSR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.IndicatorRR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.MainLightFL_HB, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.MainLightFR_HB, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.MainLightFL_LB, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.MainLightFR_LB, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.MainLightRL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.MainLightRR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 1, 1, 0, 1, 1, 1, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.BMW_X5_SUV_1.ReverseLightRR, mat.ALL_RGB, True,True)

Honda_Pan_European_Motorcycle_With_Driver_1 = visnodes.VisTransform.load( r"Honda_Pan_European_Motorcycle_With_Driver_1", r"Vehicles\Honda_Pan_European_With_Driver\Honda_Pan_European_With_Driver.osgb", False )
Honda_Pan_European_Motorcycle_With_Driver_1.setNodeMask(0xFFFFFFFF, True)
Honda_Pan_European_Motorcycle_With_Driver_1.setNodeMaskOnGeodes(70016)
light_root.setupGPUSkinningClassic(Honda_Pan_European_Motorcycle_With_Driver_1, False)
scene.addChild(Honda_Pan_European_Motorcycle_With_Driver_1)
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("SteeringWheel_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("SteeringColumn_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("Wheel0_Suspension")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("Wheel0_SteerPivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("Wheel0")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("Wheel1_Suspension")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("Wheel1_SteerPivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("Wheel1")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("BrakeLightM_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("IndicatorFL_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("IndicatorFR_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("IndicatorRL_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("IndicatorRR_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("MainLightFM_HB_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("MainLightRM_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.getTransformChild("MainLightFM_LB_pivot")
scene.Honda_Pan_European_Motorcycle_With_Driver_1.setTranslation(-4.9745488257356163, 8.6019485499109756, 0)
scene.Honda_Pan_European_Motorcycle_With_Driver_1.setRotation(0.97635074008550171, 0, 0, -1)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Honda_Pan_European_Motorcycle_With_Driver_1.BrakeLightM, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Honda_Pan_European_Motorcycle_With_Driver_1.IndicatorFL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Honda_Pan_European_Motorcycle_With_Driver_1.IndicatorFR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Honda_Pan_European_Motorcycle_With_Driver_1.IndicatorRL, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.6470588, 0, 0, 1, 0.6470588, 0, 0, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Honda_Pan_European_Motorcycle_With_Driver_1.IndicatorRR, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0.9764706, 0.8784314, 0.05882353, 1, 0.9764706, 0.8784314, 0.05882353, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Honda_Pan_European_Motorcycle_With_Driver_1.MainLightsF, mat.ALL_RGB, True,True)
mat = visnodes.VisMaterial("mat");mat.setColors(1, 0, 0, 1, 1, 0, 0, 1, 0.4, 0.4, 0.4, 0.4, 0, 0, 0, 1);mat.applyComponents(scene.Honda_Pan_European_Motorcycle_With_Driver_1.MainLightsR, mat.ALL_RGB, True,True)
visnodes.VisTexture_loadSplatMaps(scene.Honda_Pan_European_Motorcycle_With_Driver_1, r"Vehicles\Honda_Pan_European_With_Driver")
visnodes.VisRecolorTools_recolorRegionsOnNode(scene.Honda_Pan_European_Motorcycle_With_Driver_1, True, 2.23254591997932, 2.23254591997932, 2.23254591997932, False, 0, 0, 0, False, 0, 0, 0, False, 0, 0, 0)

Grass_1 = visnodes.VisTransform.createTransformNode(r"Grass_1")
scene.addChild(Grass_1)
scene.Grass_1.setTranslation(-0.13692474365234375, -0.49170303344726557, 0)
scene.Grass_1.setRotation(0, 1, 0, 0)
Grass_1_ColorBufferWriter = visnodes.VisPlane.createPlane(r"Grass_1_ColorBufferWriter", -128, 128, -128, 128)
scene.Grass_1.addChild(Grass_1_ColorBufferWriter)
Grass_1_ColorBufferWriter.setTexture(r"Grass.png", 0.00390625, 0.00390625)
Grass_1_ColorBufferWriter.enableFoundationMode(0)
visnodes.VisTexture_enableFullTransparency(Grass_1_ColorBufferWriter, 0.5)
Grass_1_DepthBufferWriter = visnodes.VisPlane.createPlane(r"Grass_1_DepthBufferWriter", -128, 128, -128, 128)
scene.Grass_1.addChild(Grass_1_DepthBufferWriter)
Grass_1_DepthBufferWriter.setTexture(r"Grass.png", 0.00390625, 0.00390625)
Grass_1_DepthBufferWriter.depthBufferOnly(0)
visnodes.VisTexture_enableFullTransparency(Grass_1_DepthBufferWriter, 0.5)
mat = visnodes.VisMaterial("mat");mat.setColors(0.7843137, 0.7843137, 0.7843137, 1.0, 0.7843137, 0.7843137, 0.7843137, 1.0, 0, 0, 0, 1.0, 0.0, 0.0, 0.0, 1.0);mat.applyComponents(scene.Grass_1, mat.ALL_RGB, False)
mat = visnodes.VisMaterial("mat");mat.setShininess(1);mat.applyComponents(Grass_1, mat.SHININESS, False)
Grass_1.setNodeMaskOnGeodes(70016)

world = visnodes.VisTransform.load("world", "world.osgb", False)
scene.addChild(world)
light_root.generateShaderFromTemplate(True)
